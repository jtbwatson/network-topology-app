# ============================================================================
# ROUTER DEVICE TEMPLATE - STANDARDIZED D2 FORMAT
# ============================================================================
# This template defines the complete data structure for router devices
# Supports: Cisco IOS/IOS-XE, Cisco NX-OS, Arista EOS

# ROUTER DEVICE TEMPLATE
router_device_name: {
  # REQUIRED BASIC PROPERTIES
  label: "display_name"
  type: "router"
  mgmt_ip: "x.x.x.x"
  
  # OPTIONAL DEVICE METADATA  
  hostname: "device_hostname"
  model: "device_model"
  serial_number: "serial_number"
  firmware_version: "ios_version"
  uptime: "uptime_string"
  location: "physical_location"
  
  # PERFORMANCE METRICS (for monitoring integration)
  cpu_usage: "percentage"
  memory_usage: "percentage"
  temperature: "celsius"
  
  # ROUTING PROTOCOL CONFIGURATION
  ospf_enabled: "true|false"
  ospf_process_id: "process_id"
  ospf_areas: "comma_separated_areas"
  ospf_router_id: "router_id_ip"
  
  bgp_enabled: "true|false"
  bgp_as: "as_number"
  bgp_router_id: "router_id_ip"
  bgp_neighbors: "neighbor_count"
  bgp_neighbor_list: "ip1,ip2,ip3"
  
  # ROUTING TABLE INFORMATION
  routing_table_count: "total_routes"
  static_routes: "route1 via gateway1, route2 via gateway2"
  default_gateway: "gateway_ip"
  
  # VRF (Virtual Routing and Forwarding) CONFIGURATION
  vrf_enabled: "true|false"
  vrf_count: "vrf_count"
  vrf_list: "vrf1,vrf2,vrf3"
  
  # VRF-LITE CONFIGURATION
  vrf_lite_enabled: "true|false"
  
  # MPLS VPN CONFIGURATION
  mpls_enabled: "true|false"
  mpls_ldp_enabled: "true|false"
  mpls_te_enabled: "true|false"
  
  # HIGH AVAILABILITY CONFIGURATION
  vrrp_status: "active|standby|disabled"
  vrrp_group: "group_number"
  vrrp_priority: "priority_value"
  vrrp_virtual_ip: "virtual_ip"
  
  hsrp_enabled: "true|false"
  hsrp_group: "group_number"
  hsrp_priority: "priority_value"
  hsrp_virtual_ip: "virtual_ip"
  
  # PORT-CHANNEL LOGICAL INTERFACES (for routers with LAG support)
  port_channel_name: {
    # REQUIRED PORT-CHANNEL PROPERTIES
    description: "port_channel_description"
    status: "up|down|admin-down"
    channel_group: "channel_group_number"
    
    # AGGREGATION PROTOCOL
    protocol: "lacp|pagp|static"
    
    # LACP SPECIFIC SETTINGS
    lacp_mode: "active|passive"
    lacp_timeout: "fast|slow"
    
    # MEMBER INTERFACE LIST
    member_interfaces: "interface1,interface2,interface3"
    active_members: "active_count"
    
    # LAYER 3 PROPERTIES (routed port-channels)
    ip_address: "port_channel_ip"
    subnet_mask: "subnet_mask"
    secondary_ips: "ip1,ip2,ip3"
    
    # VRF ASSIGNMENT
    vrf: "vrf_name"
    vrf_forwarding: "vrf_instance_name"
    
    # ROUTING PROTOCOL SETTINGS
    ospf_area: "area_number"
    ospf_cost: "cost_value"
    ospf_network_type: "point-to-point|broadcast"
    
    # HIGH AVAILABILITY
    vrrp_group: "group_number"
    vrrp_priority: "priority_value"
    vrrp_virtual_ip: "virtual_ip"
    
    # AGGREGATED PERFORMANCE METRICS
    total_bandwidth: "aggregated_speed"
    input_rate: "bps"
    output_rate: "bps"
    load_balancing: "src-dst-ip|src-dst-mac|src-ip|dst-ip"
  }
  
  # INTERFACE CONFIGURATIONS (Layer 3 physical interfaces)
  interface_name: {
    # REQUIRED INTERFACE PROPERTIES
    description: "interface_description"
    status: "up|down|admin-down"
    bandwidth: "speed_with_units"
    
    # LAYER 3 PROPERTIES
    ip_address: "interface_ip"
    subnet_mask: "subnet_mask"
    secondary_ips: "ip1,ip2,ip3"
    
    # VRF ASSIGNMENT
    vrf: "vrf_name"
    vrf_forwarding: "vrf_instance_name"
    
    # ROUTING PROTOCOL INTERFACE SETTINGS
    ospf_area: "area_number"
    ospf_cost: "cost_value"
    ospf_network_type: "point-to-point|broadcast|nbma"
    ospf_hello_interval: "seconds"
    ospf_dead_interval: "seconds"
    
    # PORT-CHANNEL MEMBERSHIP (for LAG member interfaces)
    port_channel: "port_channel_name"
    channel_group: "channel_group_number"
    lacp_mode: "active|passive|on"
    lacp_timeout: "fast|slow"
    lacp_state: "bundled|standby|suspended|individual"
    
    # ACCESS CONTROL
    access_list_in: "acl_name"
    access_list_out: "acl_name"
    
    # PERFORMANCE METRICS
    input_rate: "bps"
    output_rate: "bps"
    input_packets: "count"
    output_packets: "count"
    input_errors: "count"
    output_errors: "count"
    
    # INTERFACE-SPECIFIC HA
    vrrp_group: "group_number"
    vrrp_priority: "priority_value"
    vrrp_virtual_ip: "virtual_ip"
  }
}

# ============================================================================
# VRF CONFIGURATION (Optional detailed VRF structure)
# ============================================================================
vrf_database: {
  router_vrfs: {
    vrf_name: {
      # VRF IDENTIFICATION
      rd: "route_distinguisher"
      description: "vrf_description"
      
      # ROUTE TARGETS (MPLS VPN)
      import_rt: "rt1,rt2,rt3"
      export_rt: "rt1,rt2,rt3"
      
      # VRF INTERFACES
      interfaces: "interface1,interface2,port_channel1"
      
      # ROUTING PROTOCOLS PER VRF
      ospf_process_id: "vrf_ospf_process"
      bgp_enabled: "true|false"
      bgp_as: "as_number"
      
      # VRF ROUTING TABLE
      route_count: "vrf_route_count"
      connected_routes: "connected_count"
      static_routes: "static_count"
      dynamic_routes: "dynamic_count"
      
      # VRF-SPECIFIC FEATURES
      multicast_enabled: "true|false"
      route_leaking: "enabled|disabled"
      import_maps: "route_map1,route_map2"
      export_maps: "route_map1,route_map2"
    }
  }
}

# ============================================================================
# ROUTING TABLE (Optional detailed routing structure)
# ============================================================================
routing_table: {
  router_routes: {
    "network/prefix": {
      next_hop: "next_hop_ip"
      interface: "outgoing_interface"
      protocol: "static|ospf|bgp|connected|rip"
      metric: "route_metric"
      admin_distance: "administrative_distance"
      age: "route_age"
      vrf: "vrf_name"
    }
  }
}

# ============================================================================
# CONNECTION TOPOLOGY
# ============================================================================
# Use this format for all physical connections:
# router1.GigabitEthernet0/0/1 -> switch1.1/0/24
# router1.port_channel1 -> router2.port_channel1

# ============================================================================
# SHOW COMMANDS FOR AUTOMATED POPULATION
# ============================================================================
# CISCO IOS/IOS-XE:
# - show version (model, serial, firmware, uptime)
# - show interfaces (interface configs, statistics)
# - show ip interface brief (IP assignments, status)
# - show ip route (routing table)
# - show ip route vrf <name> (VRF-specific routing table)
# - show ip ospf (OSPF configuration)
# - show ip ospf interface (OSPF interface details)
# - show ip bgp summary (BGP configuration)
# - show ip bgp neighbors (BGP neighbor details)
# - show vrrp (VRRP status)
# - show etherchannel summary (port-channel status)
# - show etherchannel detail (detailed LAG information)
# - show lacp neighbor (LACP neighbor details)
# - show vrf (VRF configuration and status)
# - show ip vrf detail (detailed VRF information)
# - show mpls interfaces (MPLS interface status)
# - show mpls ldp neighbors (LDP neighbor information)
#
# CISCO NX-OS:
# - show version, show interface, show ip route
# - show hsrp brief (HSRP configuration)
# - show port-channel summary (port-channel status)
# - show vrf (VRF instances and status)
# - show ip route vrf <name> (VRF-specific routing table)
# - show vrf interface (VRF interface assignments)
#
# ARISTA EOS:
# - show version (system and hardware information)
# - show interfaces (interface configurations and status)
# - show ip route (routing table entries)
# - show port-channel (port-channel configurations)
# - show varp (Virtual ARP configuration)
#
# AUTOMATION TOOLS:
# - Ansible network modules (ios_facts, nxos_facts, eos_facts)
# - NAPALM getters (get_facts, get_interfaces, get_bgp_neighbors, get_route_to)
# - Netmiko show command execution
# - SNMP polling for statistics and status
# - REST APIs (Cisco DNA Center, Arista eAPI)

# ============================================================================
# EXAMPLE ROUTER CONFIGURATION
# ============================================================================
example_router: {
  label: "Border Router 1"
  type: "router"
  mgmt_ip: "10.1.1.10"
  hostname: "BR01-CORE"
  model: "ISR4331"
  serial_number: "FDO24120ABC"
  firmware_version: "16.12.04"
  
  # ROUTING PROTOCOLS
  ospf_enabled: "true"
  ospf_process_id: "1"
  ospf_areas: "0,1"
  ospf_router_id: "10.1.1.10"
  
  bgp_enabled: "true"
  bgp_as: "65001"
  bgp_router_id: "10.1.1.10"
  bgp_neighbors: "3"
  
  # VRF CONFIGURATION
  vrf_enabled: "true"
  vrf_count: "2"
  vrf_list: "PROD,MGMT"
  
  # WAN INTERFACE
  GigabitEthernet0/0/0: {
    description: "WAN Uplink to ISP"
    status: "up"
    bandwidth: "1Gbps"
    ip_address: "203.0.113.1"
    subnet_mask: "255.255.255.252"
    ospf_area: "0"
    ospf_cost: "10"
    vrf: "default"
  }
  
  # LAN INTERFACE
  GigabitEthernet0/0/1: {
    description: "LAN to Core Switch"
    status: "up"
    bandwidth: "1Gbps"
    ip_address: "10.1.1.1"
    subnet_mask: "255.255.255.0"
    ospf_area: "0"
    ospf_cost: "1"
    vrrp_group: "1"
    vrrp_priority: "110"
    vrrp_virtual_ip: "10.1.1.254"
  }
}