# STANDARDIZED D2 NETWORK TOPOLOGY TEMPLATE
# This template defines the complete data structure for programmatic population
# from network discovery tools, configuration exports, and show commands

# DEVICE TEMPLATE STRUCTURE
# Each device follows this standardized format based on type

# ============================================================================
# ROUTER DEVICE TEMPLATE
# ============================================================================
router_device_name: {
  # REQUIRED BASIC PROPERTIES
  label: "display_name"
  type: "router"
  mgmt_ip: "x.x.x.x"
  
  # OPTIONAL DEVICE METADATA  
  hostname: "device_hostname"
  model: "device_model"
  serial_number: "serial_number"
  firmware_version: "ios_version"
  uptime: "uptime_string"
  location: "physical_location"
  
  # PERFORMANCE METRICS (for monitoring integration)
  cpu_usage: "percentage"
  memory_usage: "percentage"
  temperature: "celsius"
  
  # ROUTING PROTOCOL CONFIGURATION
  ospf_enabled: "true|false"
  ospf_process_id: "process_id"
  ospf_areas: "comma_separated_areas"
  ospf_router_id: "router_id_ip"
  
  bgp_enabled: "true|false"
  bgp_as: "as_number"
  bgp_router_id: "router_id_ip"
  bgp_neighbors: "neighbor_count"
  bgp_neighbor_list: "ip1,ip2,ip3"
  
  # ROUTING TABLE INFORMATION
  routing_table_count: "total_routes"
  static_routes: "route1 via gateway1, route2 via gateway2"
  default_gateway: "gateway_ip"
  
  # VRF (Virtual Routing and Forwarding) CONFIGURATION
  vrf_enabled: "true|false"
  vrf_count: "vrf_count"
  vrf_list: "vrf1,vrf2,vrf3"
  
  # VRF-LITE CONFIGURATION
  vrf_lite_enabled: "true|false"
  
  # MPLS VPN CONFIGURATION
  mpls_enabled: "true|false"
  mpls_ldp_enabled: "true|false"
  mpls_te_enabled: "true|false"
  
  # HIGH AVAILABILITY CONFIGURATION
  vrrp_status: "active|standby|disabled"
  vrrp_group: "group_number"
  vrrp_priority: "priority_value"
  vrrp_virtual_ip: "virtual_ip"
  
  hsrp_enabled: "true|false"
  hsrp_group: "group_number"
  hsrp_priority: "priority_value"
  hsrp_virtual_ip: "virtual_ip"
  
  # PORT-CHANNEL LOGICAL INTERFACES (for routers with LAG support)
  port_channel_name: {
    # REQUIRED PORT-CHANNEL PROPERTIES
    description: "port_channel_description"
    status: "up|down|admin-down"
    channel_group: "channel_group_number"
    
    # AGGREGATION PROTOCOL
    protocol: "lacp|pagp|static"
    
    # LACP SPECIFIC SETTINGS
    lacp_mode: "active|passive"
    lacp_timeout: "fast|slow"
    
    # MEMBER INTERFACE LIST
    member_interfaces: "interface1,interface2,interface3"
    active_members: "active_count"
    
    # LAYER 3 PROPERTIES (routed port-channels)
    ip_address: "port_channel_ip"
    subnet_mask: "subnet_mask"
    secondary_ips: "ip1,ip2,ip3"
    
    # VRF ASSIGNMENT
    vrf: "vrf_name"
    vrf_forwarding: "vrf_instance_name"
    
    # ROUTING PROTOCOL SETTINGS
    ospf_area: "area_number"
    ospf_cost: "cost_value"
    ospf_network_type: "point-to-point|broadcast"
    
    # HIGH AVAILABILITY
    vrrp_group: "group_number"
    vrrp_priority: "priority_value"
    vrrp_virtual_ip: "virtual_ip"
    
    # AGGREGATED PERFORMANCE METRICS
    total_bandwidth: "aggregated_speed"
    input_rate: "bps"
    output_rate: "bps"
    load_balancing: "src-dst-ip|src-dst-mac|src-ip|dst-ip"
  }
  
  # INTERFACE CONFIGURATIONS (Layer 3 physical interfaces)
  interface_name: {
    # REQUIRED INTERFACE PROPERTIES
    description: "interface_description"
    status: "up|down|admin-down"
    bandwidth: "speed_with_units"
    
    # LAYER 3 PROPERTIES
    ip_address: "interface_ip"
    subnet_mask: "subnet_mask"
    secondary_ips: "ip1,ip2,ip3"
    
    # VRF ASSIGNMENT
    vrf: "vrf_name"
    vrf_forwarding: "vrf_instance_name"
    
    # ROUTING PROTOCOL INTERFACE SETTINGS
    ospf_area: "area_number"
    ospf_cost: "cost_value"
    ospf_network_type: "point-to-point|broadcast|nbma"
    ospf_hello_interval: "seconds"
    ospf_dead_interval: "seconds"
    
    # PORT-CHANNEL MEMBERSHIP (for LAG member interfaces)
    port_channel: "port_channel_name"
    channel_group: "channel_group_number"
    lacp_mode: "active|passive|on"
    lacp_timeout: "fast|slow"
    lacp_state: "bundled|standby|suspended|individual"
    
    # ACCESS CONTROL
    access_list_in: "acl_name"
    access_list_out: "acl_name"
    
    # PERFORMANCE METRICS
    input_rate: "bps"
    output_rate: "bps"
    input_packets: "count"
    output_packets: "count"
    input_errors: "count"
    output_errors: "count"
    
    # INTERFACE-SPECIFIC HA
    vrrp_group: "group_number"
    vrrp_priority: "priority_value"
    vrrp_virtual_ip: "virtual_ip"
  }
}

# ============================================================================
# SWITCH DEVICE TEMPLATE  
# ============================================================================
switch_device_name: {
  # REQUIRED BASIC PROPERTIES
  label: "display_name"
  type: "switch"
  mgmt_ip: "x.x.x.x"
  
  # OPTIONAL DEVICE METADATA
  hostname: "device_hostname"
  model: "device_model"
  serial_number: "serial_number"
  firmware_version: "ios_version"
  uptime: "uptime_string"
  location: "physical_location"
  
  # PERFORMANCE METRICS
  cpu_usage: "percentage"
  memory_usage: "percentage"
  temperature: "celsius"
  poe_usage: "watts_used/watts_available"
  
  # LAYER 3 SWITCHING CAPABILITIES
  ip_routing_enabled: "true|false"
  routing_table_count: "route_count"
  
  # VRF (Virtual Routing and Forwarding) CONFIGURATION
  vrf_enabled: "true|false"
  vrf_count: "vrf_count"
  vrf_list: "vrf1,vrf2,vrf3"
  
  # CISCO NEXUS VDC (Virtual Device Context)
  vdc_enabled: "true|false"
  vdc_count: "vdc_count"
  vdc_list: "vdc1,vdc2,vdc3"
  
  # ROUTING PROTOCOL CONFIGURATION (for L3 switches)
  ospf_enabled: "true|false"
  ospf_process_id: "process_id"
  ospf_areas: "comma_separated_areas"
  ospf_router_id: "router_id_ip"
  
  # DHCP SERVICES
  dhcp_relay_enabled: "true|false"
  dhcp_pools: "pool1,pool2,pool3"
  dhcp_leases_active: "lease_count"
  
  # HIGH AVAILABILITY
  vrrp_groups: "number_of_groups"
  
  # VENDOR-SPECIFIC HIGH AVAILABILITY
  # Cisco: VSS, VPC, StackWise
  vsx_role: "primary|secondary|standalone"
  vsx_status: "up|down|split"
  vpc_role: "primary|secondary|none"
  vpc_peer_status: "up|down"
  
  # Aruba AOS-CX: VSX
  vsx_enabled: "true|false"
  vsx_role: "primary|secondary"
  vsx_peer_ip: "peer_mgmt_ip"
  vsx_keepalive_status: "up|down"
  vsx_isl_status: "up|down"
  
  # Arista EOS: MLAG
  mlag_enabled: "true|false"
  mlag_domain_id: "domain_id"
  mlag_role: "primary|secondary"
  mlag_peer_ip: "peer_ip"
  mlag_peer_link: "interface_name"
  mlag_state: "active|inactive|disabled"
  
  # Virtual ARP (Arista)
  varp_enabled: "true|false"
  varp_mac: "virtual_mac_address"
  
  # STACKING INFORMATION
  stack_role: "master|member|standalone"
  stack_priority: "priority_value"
  stack_members: "member_count"
  
  # SVI CONFIGURATIONS (Layer 3 VLAN interfaces)
  svi_vlan_name: {
    vlan_id: "vlan_number"
    ip_address: "svi_ip"
    subnet_mask: "subnet_mask"
    status: "up|down"
    description: "vlan_description"
    helper_address: "dhcp_helper_ip"
    
    # VRF ASSIGNMENT
    vrf: "vrf_name"
    vrf_forwarding: "vrf_instance_name"
    
    # ROUTING PROTOCOL SVI SETTINGS
    ospf_area: "area_number"
    ospf_cost: "cost_value"
    
    # SVI HIGH AVAILABILITY
    vrrp_group: "group_number"
    vrrp_priority: "priority_value"
    vrrp_virtual_ip: "virtual_ip"
    
    # VLAN STATISTICS
    clients_connected: "client_count"
    traffic_in: "bytes"
    traffic_out: "bytes"
  }
  
  # PORT-CHANNEL LOGICAL INTERFACES (Link Aggregation Groups)
  port_channel_name: {
    # REQUIRED PORT-CHANNEL PROPERTIES
    description: "port_channel_description"
    status: "up|down|admin-down"
    channel_group: "channel_group_number"
    
    # AGGREGATION PROTOCOL
    protocol: "lacp|pagp|static"
    
    # VENDOR-SPECIFIC LAG PROPERTIES
    # Cisco: EtherChannel/Port-Channel
    lacp_mode: "active|passive"
    lacp_timeout: "fast|slow"
    lacp_priority: "priority_value"
    lacp_key: "key_value"
    pagp_mode: "auto|desirable"
    
    # Aruba AOS: Trunk
    trunk_type: "lacp|static"
    lacp_activity: "active|passive"
    
    # Aruba AOS-CX: LAG
    lag_type: "dynamic|static"
    lag_mode: "active|passive"
    lag_hash: "l2|l3|l4"
    
    # Arista EOS: Port-Channel
    mlag_id: "mlag_id_number"
    
    # MEMBER INTERFACE LIST
    member_interfaces: "interface1,interface2,interface3"
    active_members: "active_count"
    standby_members: "standby_count"
    
    # LAYER 2 SWITCHPORT CONFIGURATION (inherited by members)
    switchport_mode: "access|trunk|dynamic"
    access_vlan: "vlan_number"
    native_vlan: "vlan_number"
    allowed_vlans: "vlan_list_or_all"
    voice_vlan: "vlan_number"
    
    # LAYER 3 PROPERTIES (for routed port-channels)
    ip_address: "port_channel_ip"
    subnet_mask: "subnet_mask"
    
    # ROUTING PROTOCOL SETTINGS
    ospf_area: "area_number"
    ospf_cost: "cost_value"
    ospf_network_type: "point-to-point|broadcast"
    
    # HIGH AVAILABILITY
    vrrp_group: "group_number"
    vrrp_priority: "priority_value"
    vrrp_virtual_ip: "virtual_ip"
    
    # SPANNING TREE
    spanning_tree_mode: "normal|edge|network"
    spanning_tree_guard: "root|loop|bpdu"
    
    # AGGREGATED PERFORMANCE METRICS
    total_bandwidth: "aggregated_speed"
    input_rate: "bps"
    output_rate: "bps"
    input_packets: "count"
    output_packets: "count"
    load_balancing: "src-dst-ip|src-dst-mac|src-ip|dst-ip"
  }
  
  # PHYSICAL INTERFACE CONFIGURATIONS
  interface_name: {
    # REQUIRED INTERFACE PROPERTIES
    description: "interface_description"
    status: "up|down|admin-down|err-disabled"
    bandwidth: "speed_with_units"
    
    # LAYER 2 SWITCHPORT CONFIGURATION
    switchport_mode: "access|trunk|dynamic"
    access_vlan: "vlan_number"
    native_vlan: "vlan_number"
    allowed_vlans: "vlan_list_or_all"
    voice_vlan: "vlan_number"
    
    # PORT SECURITY
    port_security_enabled: "true|false"
    port_security_max: "max_addresses"
    port_security_violation: "shutdown|restrict|protect"
    
    # PORT-CHANNEL MEMBERSHIP (for LAG member interfaces)
    port_channel: "port_channel_name"
    channel_group: "channel_group_number"
    lacp_mode: "active|passive|on"
    lacp_timeout: "fast|slow"
    lacp_priority: "priority_value"
    lacp_key: "key_value"
    lacp_state: "bundled|standby|suspended|individual"
    lacp_activity: "active|passive|timeout"
    
    # SPANNING TREE
    spanning_tree_mode: "normal|edge|network"
    spanning_tree_guard: "root|loop|bpdu"
    
    # POWER OVER ETHERNET
    poe_enabled: "true|false"
    poe_power: "watts"
    poe_class: "class_number"
    
    # PERFORMANCE METRICS
    input_rate: "bps"
    output_rate: "bps"
    input_packets: "count"
    output_packets: "count"
    input_errors: "count"
    output_errors: "count"
    crc_errors: "count"
    
    # LAYER 3 PROPERTIES (for routed ports)
    ip_address: "interface_ip"
    subnet_mask: "subnet_mask"
    
    # VRF ASSIGNMENT
    vrf: "vrf_name"
    vrf_forwarding: "vrf_instance_name"
  }
}

# ============================================================================
# PALO ALTO FIREWALL DEVICE TEMPLATE
# ============================================================================
firewall_device_name: {
  # REQUIRED BASIC PROPERTIES
  label: "display_name"
  type: "firewall"
  mgmt_ip: "x.x.x.x"
  
  # OPTIONAL DEVICE METADATA
  hostname: "device_hostname"
  model: "device_model"
  serial_number: "serial_number"
  firmware_version: "panos_version"
  uptime: "uptime_string"
  location: "physical_location"
  
  # PERFORMANCE METRICS
  cpu_usage: "percentage"
  memory_usage: "percentage"
  session_utilization: "percentage"
  disk_usage: "percentage"
  
  # PALO ALTO HIGH AVAILABILITY
  ha_enabled: "true|false"
  ha_status: "active|passive|suspended|non-functional"
  ha_peer: "peer_ip"
  ha_peer_serial: "peer_serial_number"
  ha_mode: "active-passive|active-active"
  ha_sync_status: "synchronized|not-synchronized"
  ha_link_monitoring: "enabled|disabled"
  ha_path_monitoring: "enabled|disabled"
  
  # SESSION AND THROUGHPUT METRICS
  sessions_active: "session_count"
  sessions_max: "max_sessions"
  sessions_tcp: "tcp_session_count"
  sessions_udp: "udp_session_count"
  sessions_icmp: "icmp_session_count"
  throughput_current: "mbps"
  throughput_max: "max_mbps"
  
  # PALO ALTO SECURITY SUBSCRIPTIONS
  threat_prevention: "enabled|disabled"
  antivirus_version: "content_version"
  threat_db_version: "threat_version"
  url_filtering: "enabled|disabled"
  url_db_version: "url_version"
  wildfire_enabled: "true|false"
  dns_security: "enabled|disabled"
  
  # GLOBAL PROTECT (VPN)
  globalprotect_enabled: "true|false"
  gp_portals: "portal_count"
  gp_gateways: "gateway_count"
  gp_users_connected: "user_count"
  
  # LICENSING
  license_authcode: "authcode"
  support_license: "valid|expired|missing"
  threat_license: "valid|expired|missing"
  url_license: "valid|expired|missing"
  wildfire_license: "valid|expired|missing"
  
  # VIRTUAL SYSTEMS (VSYS)
  vsys_enabled: "true|false"
  vsys_count: "vsys_count"
  vsys_max: "max_vsys"
  
  # PALO ALTO AGGREGATE ETHERNET (LAG) INTERFACES
  aggregate_ethernet_name: {
    description: "aggregate_description"
    status: "up|down"
    member_interfaces: "interface1,interface2"
    lacp_mode: "active|passive"
    distribution_algorithm: "ip-modulo|ip-hash|weighted-round-robin"
    security_zone: "zone_name"
    ip_address: "aggregate_ip"
    subnet_mask: "subnet_mask"
  }
  
  # PHYSICAL/LOGICAL INTERFACE CONFIGURATIONS
  interface_name: {
    # REQUIRED INTERFACE PROPERTIES  
    description: "interface_description"
    status: "up|down"
    bandwidth: "speed_with_units"
    
    # PALO ALTO INTERFACE PROPERTIES
    security_zone: "zone_name"
    interface_type: "layer3|layer2|tap|ha|aggregate-ethernet|tunnel"
    virtual_wire: "vwire_name"
    
    # LAYER 3 PROPERTIES
    ip_address: "interface_ip"
    subnet_mask: "subnet_mask"
    ip_type: "static|dhcp"
    management_profile: "profile_name"
    
    # LAYER 2 PROPERTIES (for L2/VWIRE interfaces)
    vlan_object: "vlan_object_name"
    
    # AGGREGATE ETHERNET MEMBERSHIP
    aggregate_group: "ae_interface_name"
    
    # TUNNEL INTERFACE PROPERTIES
    tunnel_interface_type: "ipsec|gre"
    tunnel_zone: "tunnel_zone_name"
    
    # HA INTERFACE PROPERTIES
    ha1_ip: "ha1_ip_address"
    ha1_netmask: "ha1_netmask"
    ha1_gateway: "ha1_gateway"
    ha2_ip: "ha2_ip_address"
    ha2_netmask: "ha2_netmask"
    
    # PERFORMANCE METRICS
    input_rate: "bps"
    output_rate: "bps"
    input_packets: "count"
    output_packets: "count"
    input_errors: "count"
    output_errors: "count"
  }
}

# ============================================================================
# ARUBA WIRELESS CONTROLLER DEVICE TEMPLATE
# ============================================================================
wireless_controller_device_name: {
  # REQUIRED BASIC PROPERTIES
  label: "display_name"
  type: "wireless_controller"
  mgmt_ip: "x.x.x.x"
  
  # OPTIONAL DEVICE METADATA
  hostname: "device_hostname"
  model: "device_model"
  serial_number: "serial_number"
  firmware_version: "controller_version"
  uptime: "uptime_string"
  location: "physical_location"
  
  # PERFORMANCE METRICS
  cpu_usage: "percentage"
  memory_usage: "percentage"
  storage_usage: "percentage"
  
  # ARUBA CONTROLLER CLUSTER
  controller_status: "active|standby|maintenance"
  cluster_enabled: "true|false"
  cluster_role: "master|local|backup"
  cluster_members: "member_count"
  cluster_ip: "cluster_virtual_ip"
  redundancy_status: "up|down"
  
  # ACCESS POINT MANAGEMENT
  aps_connected: "ap_count"
  aps_total: "total_aps"
  aps_up: "up_ap_count"
  aps_down: "down_ap_count"
  ap_models: "model1,model2,model3"
  
  # CLIENT STATISTICS
  total_clients: "client_count"
  clients_2ghz: "2ghz_client_count"
  clients_5ghz: "5ghz_client_count"
  clients_6ghz: "6ghz_client_count"
  
  # ARUBA LICENSING
  licenses_used: "used_count"
  licenses_available: "total_licenses"
  license_type: "permanent|subscription"
  license_pools: "pool1,pool2"
  
  # ARUBA-SPECIFIC FEATURES
  rf_optimization: "enabled|disabled"
  arm_enabled: "true|false"
  air_monitor: "enabled|disabled"
  ids_enabled: "true|false"
  spectrum_monitoring: "enabled|disabled"
  
  # MOBILITY AND TUNNELING
  mobility_master: "ip_address"
  mobility_domain: "domain_name"
  local_breakout: "enabled|disabled"
  tunneled_node: "enabled|disabled"
  
  # MANAGEMENT SETTINGS
  mgmt_vlan: "vlan_number"
  guest_portal: "enabled|disabled"
  captive_portal_profiles: "profile_count"
  
  # WIRELESS NETWORKS (SSIDs)
  ssid_count: "ssid_count"
  ssids: "ssid1,ssid2,ssid3"
  wlan_profiles: "profile1,profile2,profile3"
  
  # ARUBA CENTRALIZED AUTHENTICATION
  clearpass_enabled: "true|false"
  clearpass_server: "clearpass_ip"
  radius_servers: "server1,server2"
  
  # GUEST ACCESS
  guest_networks: "guest_ssid_count"
  guest_portal_profiles: "portal_profile_count"
  guest_users_active: "active_guest_count"
  
  # ARUBA CONTROLLER INTERFACE CONFIGURATIONS
  port_name: {
    # REQUIRED INTERFACE PROPERTIES
    description: "port_description"
    status: "up|down"
    bandwidth: "speed_with_units"
    
    # ARUBA CONTROLLER PORT PROPERTIES
    vlan: "vlan_number"
    vlan_mode: "access|trunk"
    trusted: "true|false"
    
    # LAG CONFIGURATION (for Aruba controller LAGs)
    lag_group: "lag_number"
    lag_mode: "static|lacp"
    
    # ARUBA-SPECIFIC PORT SETTINGS
    user_role: "role_name"
    captive_portal_profile: "profile_name"
    
    # PERFORMANCE METRICS
    input_rate: "bps"
    output_rate: "bps"
    ap_tunnel_count: "tunnel_count"
  }
}

# ============================================================================
# EXTERNAL/WAN CONNECTION DEVICE TEMPLATES
# ============================================================================

# ISP/WAN PROVIDER TEMPLATE
wan_provider_device_name: {
  # REQUIRED BASIC PROPERTIES
  label: "ISP Provider Name"
  type: "wan_provider"
  mgmt_ip: "provider_gateway_ip"
  
  # PROVIDER INFORMATION
  provider_name: "Provider Company Name"
  circuit_id: "Circuit Identifier"
  bandwidth: "Total Bandwidth"
  circuit_type: "MPLS|Internet|Dedicated|Metro-E|Fiber|Cable"
  sla_class: "Business|Premium|Standard|Basic"
  contract_number: "Contract Reference"
  support_contact: "24x7 Support Number"
  account_manager: "Account Manager Name"
  
  # SERVICE LEVEL DETAILS
  committed_rate: "CIR in Mbps"
  burst_rate: "PIR in Mbps"
  latency_sla: "Round-trip latency in ms"
  availability_sla: "Uptime percentage"
  packet_loss_sla: "Maximum packet loss percentage"
  
  # PRIMARY CIRCUIT
  WAN1: {
    description: "Primary WAN Circuit"
    status: "up|down|maintenance"
    bandwidth: "Circuit Bandwidth"
    ip_address: "Provider Gateway IP"
    subnet_mask: "Subnet Mask"
    circuit_type: "Primary|Backup"
    vlan_id: "Provider VLAN"
    encapsulation: "dot1q|untagged"
  }
  
  # SECONDARY CIRCUIT (if applicable)
  WAN2: {
    description: "Secondary WAN Circuit"
    status: "up|down|maintenance"
    bandwidth: "Circuit Bandwidth"
    ip_address: "Provider Gateway IP"
    subnet_mask: "Subnet Mask"
    circuit_type: "Primary|Backup"
    vlan_id: "Provider VLAN"
    encapsulation: "dot1q|untagged"
  }
}

# INTERNET CONNECTION TEMPLATE
internet_connection_device_name: {
  # REQUIRED BASIC PROPERTIES
  label: "Internet Connection"
  type: "internet"
  mgmt_ip: "0.0.0.0"
  
  # INTERNET SERVICE DETAILS
  provider_name: "Internet Service Provider"
  service_type: "Broadband|Fiber|Cable|DSL|Satellite"
  bandwidth_down: "Download Speed"
  bandwidth_up: "Upload Speed"
  static_ips: "Number of Static IPs"
  dynamic_dns: "enabled|disabled"
  
  # SERVICE CHARACTERISTICS
  latency_typical: "Typical latency in ms"
  data_cap: "Monthly data limit or unlimited"
  burst_allowance: "Burst capability"
  
  Internet: {
    description: "Internet Gateway"
    status: "up|down"
    bandwidth: "Total Bandwidth"
    ip_address: "0.0.0.0"
    subnet_mask: "0.0.0.0"
    default_route: "true"
  }
}

# MPLS PRIVATE NETWORK TEMPLATE
mpls_network_device_name: {
  # REQUIRED BASIC PROPERTIES
  label: "MPLS Provider"
  type: "mpls"
  mgmt_ip: "mpls_gateway_ip"
  
  # MPLS SERVICE INFORMATION
  provider_name: "MPLS Service Provider"
  vpn_id: "Customer VPN ID"
  service_class: "Class of Service"
  bandwidth: "Committed Information Rate"
  vpn_type: "Layer3|Layer2|VPLS"
  
  # MPLS VPN DETAILS
  customer_asn: "Customer AS Number"
  provider_asn: "Provider AS Number"
  route_distinguisher: "RD Value"
  import_rt: "Import Route Targets"
  export_rt: "Export Route Targets"
  
  PE_Router: {
    description: "Provider Edge Router"
    status: "up|down"
    bandwidth: "Interface Speed"
    ip_address: "PE Router IP"
    subnet_mask: "Subnet Mask"
    bgp_as: "Provider AS Number"
    vrf_name: "Customer VRF Name"
  }
}

# CLOUD CONNECTION TEMPLATE  
cloud_connection_device_name: {
  # REQUIRED BASIC PROPERTIES
  label: "Cloud Provider"
  type: "external"
  mgmt_ip: "cloud_gateway_ip"
  
  # CLOUD SERVICE DETAILS
  provider_name: "AWS|Azure|GCP|Oracle|IBM"
  connection_type: "Direct Connect|ExpressRoute|Interconnect|FastConnect"
  bandwidth: "Connection Bandwidth"
  region: "Cloud Region"
  availability_zone: "AZ or Zone"
  
  # CLOUD-SPECIFIC DETAILS
  virtual_circuit_id: "VC or Connection ID"
  bgp_asn: "Cloud Provider ASN"
  customer_asn: "Customer ASN"
  vlan_id: "Cloud VLAN"
  
  Cloud_Gateway: {
    description: "Cloud Gateway Interface"
    status: "up|down"
    bandwidth: "Interface Speed"
    ip_address: "Cloud Gateway IP"
    subnet_mask: "Subnet Mask"
    vlan_id: "Cloud VLAN"
    bgp_neighbor: "BGP Peer IP"
  }
}

# EXTERNAL NETWORK TEMPLATE (Generic)
external_network_device_name: {
  # REQUIRED BASIC PROPERTIES
  label: "External Network"
  type: "external"
  mgmt_ip: "external_gateway_ip"
  
  # EXTERNAL NETWORK DETAILS
  network_name: "External Network Name"
  network_type: "Partner|Vendor|Branch|Remote Site"
  connection_method: "VPN|Leased Line|Internet|Wireless"
  administrator: "Network Administrator Contact"
  
  External_Interface: {
    description: "External Network Interface"
    status: "up|down"
    bandwidth: "Interface Speed"
    ip_address: "External Gateway IP"
    subnet_mask: "Subnet Mask"
    connection_type: "Static|Dynamic|VPN Tunnel"
  }
}

# ============================================================================
# ACCESS POINT DEVICE TEMPLATE
# ============================================================================
access_point_device_name: {
  # REQUIRED BASIC PROPERTIES
  label: "display_name"
  type: "access_point"
  mgmt_ip: "x.x.x.x"
  
  # OPTIONAL DEVICE METADATA
  hostname: "ap_hostname"
  model: "ap_model"
  serial_number: "serial_number"
  firmware_version: "ap_version"
  uptime: "uptime_string"
  location: "physical_location"
  
  # ACCESS POINT SPECIFIC
  controller_ip: "controller_management_ip"
  clients_connected: "client_count"
  clients_max: "max_clients"
  
  # RADIO INFORMATION
  radio_2ghz_enabled: "true|false"
  radio_5ghz_enabled: "true|false"
  radio_6ghz_enabled: "true|false"
  channel_2ghz: "channel_number"
  channel_5ghz: "channel_number"
  power_2ghz: "dbm"
  power_5ghz: "dbm"
  
  # POWER AND ENVIRONMENT
  power_source: "poe|local|injector"
  power_consumption: "watts"
  temperature: "celsius"
}

# ============================================================================
# OPTIONAL: DETAILED ROUTING TABLE STRUCTURE
# ============================================================================
routing_table: {
  device_name_routes: {
    "network/prefix": {
      next_hop: "next_hop_ip"
      interface: "outgoing_interface"
      protocol: "static|ospf|bgp|connected|rip"
      metric: "route_metric"
      admin_distance: "administrative_distance"
      age: "route_age"
    }
  }
}

# ============================================================================
# OPTIONAL: DETAILED VLAN DATABASE
# ============================================================================
vlan_database: {
  site_vlans: {
    vlan_number: {
      name: "vlan_name"
      description: "vlan_description"
      status: "active|suspended"
      ports: "interface1,interface2,interface3"
      spanning_tree_priority: "priority_value"
    }
  }
}

# ============================================================================
# OPTIONAL: DETAILED VRF CONFIGURATION
# ============================================================================
vrf_database: {
  device_vrfs: {
    vrf_name: {
      # VRF IDENTIFICATION
      rd: "route_distinguisher"
      description: "vrf_description"
      
      # ROUTE TARGETS (MPLS VPN)
      import_rt: "rt1,rt2,rt3"
      export_rt: "rt1,rt2,rt3"
      
      # VRF INTERFACES
      interfaces: "interface1,interface2,svi1"
      
      # ROUTING PROTOCOLS PER VRF
      ospf_process_id: "vrf_ospf_process"
      bgp_enabled: "true|false"
      bgp_as: "as_number"
      
      # VRF ROUTING TABLE
      route_count: "vrf_route_count"
      connected_routes: "connected_count"
      static_routes: "static_count"
      dynamic_routes: "dynamic_count"
      
      # VRF-SPECIFIC FEATURES
      multicast_enabled: "true|false"
      route_leaking: "enabled|disabled"
      import_maps: "route_map1,route_map2"
      export_maps: "route_map1,route_map2"
    }
  }
}

# ============================================================================
# CONNECTION TOPOLOGY - STANDARDIZED FORMAT
# ============================================================================
# Use this format for all physical connections:
# source_device.source_interface -> target_device.target_interface

# Examples:
# Internal connections:
# router1.GigabitEthernet0/0/1 -> switch1.1/0/24
# switch1.1/0/48 -> switch2.1/0/48
# firewall1.ethernet1/2 -> switch1.1/0/46
# switch1.1/0/12 -> wireless_controller1.port1
#
# External/WAN connections:
# router1.GigabitEthernet0/0/0 -> wan_provider.WAN1
# router2.GigabitEthernet0/0/0 -> wan_provider.WAN2
# firewall1.ethernet1/1 -> internet_connection.Internet
# router1.GigabitEthernet0/0/2 -> mpls_network.PE_Router
# router1.GigabitEthernet0/0/3 -> cloud_connection.Cloud_Gateway
# branch_router.Serial0/0/0 -> external_network.External_Interface

# ============================================================================
# PROGRAMMATIC POPULATION NOTES
# ============================================================================
# This template supports automated population from:
#
# CISCO IOS/IOS-XE:
# - show version (model, serial, firmware, uptime)
# - show interfaces (interface configs, statistics)
# - show ip interface brief (IP assignments, status)
# - show ip route (routing table)
# - show ip ospf (OSPF configuration)
# - show ip bgp summary (BGP configuration)
# - show vrrp (VRRP status)
# - show vlan (VLAN database)
# - show etherchannel summary (port-channel status)
# - show etherchannel detail (detailed LAG information)
# - show lacp neighbor (LACP neighbor details)
# - show lacp sys-id (LACP system information)
# - show vrf (VRF configuration and status)
# - show ip vrf detail (detailed VRF information)
# - show ip route vrf <name> (VRF-specific routing table)
#
# CISCO NX-OS:
# - show version, show interface, show ip route
# - show hsrp brief (HSRP configuration)
# - show vpc (VPC configuration)
# - show port-channel summary (port-channel status)
# - show port-channel database (detailed port-channel info)
# - show lacp port-channel (LACP port-channel details)
# - show vrf (VRF instances and status)
# - show ip route vrf <name> (VRF-specific routing table)
# - show vrf interface (VRF interface assignments)
# - show vdc (Virtual Device Context information)
#
# ARUBA AOS (Procurve/Legacy):
# - show version (system information)
# - show interfaces (interface status and configuration)
# - show ip route (routing table)
# - show trunk (trunk/LAG configurations)
# - show lacp (LACP status and configuration)
# - show vlan (VLAN database)
# - show spanning-tree (STP configuration)
#
# ARUBA AOS-CX:
# - show version detail (detailed system information)
# - show interface all (comprehensive interface details)
# - show ip route (routing table)
# - show lag (LAG configurations and status)
# - show lacp aggregates (LACP aggregate details)
# - show vlan (VLAN configurations)
# - show vsx status (VSX cluster status)
# - show ospf neighbors (OSPF neighbor information)
# - show bgp summary (BGP summary information)
#
# ARISTA EOS:
# - show version (system and hardware information)
# - show interfaces (interface configurations and status)
# - show ip route (routing table entries)
# - show port-channel (port-channel configurations)
# - show lacp (LACP configurations and status)
# - show vlan (VLAN database)
# - show mlag (MLAG configuration and status)
# - show ospf neighbors (OSPF adjacencies)
# - show bgp summary (BGP peer summary)
# - show varp (Virtual ARP configuration)
#
# PALO ALTO FIREWALLS:
# - show system info (system and hardware information)
# - show interface all (interface configurations and statistics)
# - show high-availability state (HA cluster status)
# - show session info (active session statistics)
# - show routing route (routing table)
# - show network aggregate-ethernet (LAG configurations)
# - show vpn tunnel (VPN tunnel status)
# - show threat-detection statistics (security statistics)
# - show license info (licensing information)
#
# ARUBA WIRELESS CONTROLLERS:
# - show version (controller software and hardware info)
# - show ap active (active access point summary)
# - show ap database (comprehensive AP database)
# - show wlan ssid-profile (SSID configurations)
# - show user-table (connected client information)
# - show licensing (license usage and availability)
# - show controller (controller cluster information)
# - show datapath session table (client session details)
# - show ap arm rf-summary (RF environment summary)
#
# AUTOMATION TOOLS:
# - Ansible network modules (ios_facts, nxos_facts, etc.)
# - NAPALM getters (get_facts, get_interfaces, get_bgp_neighbors)
# - Netmiko show command execution
# - SNMP polling for statistics and status
# - REST APIs (Cisco DNA Center, Meraki Dashboard, etc.)

# ============================================================================
# PORT-CHANNEL EXAMPLE - PRACTICAL IMPLEMENTATION
# ============================================================================
# This example shows how to represent a typical port-channel configuration:

example_switch: {
  label: "Core Switch 1"
  type: "switch"
  mgmt_ip: "10.1.1.10"
  
  # PORT-CHANNEL LOGICAL INTERFACE
  port_channel1: {
    description: "Core ISL to Core Switch 2"
    status: "up"
    channel_group: "1"
    protocol: "lacp"
    lacp_mode: "active"
    lacp_timeout: "fast"
    member_interfaces: "1/0/47,1/0/48"
    active_members: "2"
    standby_members: "0"
    switchport_mode: "trunk"
    native_vlan: 1
    allowed_vlans: "all"
    total_bandwidth: "20Gbps"
    load_balancing: "src-dst-ip"
  }
  
  # MEMBER INTERFACES
  1/0/47: {
    description: "Port-Channel1 Member 1"
    status: "up"
    bandwidth: "10Gbps"
    port_channel: "port_channel1"
    channel_group: "1"
    lacp_mode: "active"
    lacp_timeout: "fast"
    lacp_state: "bundled"
    lacp_activity: "active"
  }
  
  1/0/48: {
    description: "Port-Channel1 Member 2"  
    status: "up"
    bandwidth: "10Gbps"
    port_channel: "port_channel1"
    channel_group: "1"
    lacp_mode: "active"
    lacp_timeout: "fast"
    lacp_state: "bundled"
    lacp_activity: "active"
  }
}

# CONNECTION SYNTAX FOR PORT-CHANNELS:
# Use the logical port-channel interface in connections:
# example_switch.port_channel1 -> core_switch2.port_channel1
# 
# Individual member interfaces should NOT be included in connections
# since the logical port-channel represents the aggregated link

# ============================================================================
# VRF EXAMPLE - PRACTICAL IMPLEMENTATION  
# ============================================================================
# This example shows how to represent VRF configurations:

example_nexus_switch: {
  label: "Nexus Core Switch"
  type: "switch"
  mgmt_ip: "10.1.1.10"
  
  # VRF CONFIGURATION
  vrf_enabled: "true"
  vrf_count: "3"
  vrf_list: "PROD,DEV,MGMT"
  
  # VDC CONFIGURATION (Nexus 7K)
  vdc_enabled: "true"
  vdc_count: "2"
  vdc_list: "default,TENANT-A"
  
  # PRODUCTION VRF SVI
  vlan100: {
    vlan_id: "100"
    ip_address: "10.100.1.1"
    subnet_mask: "255.255.255.0"
    status: "up"
    description: "Production Network"
    vrf: "PROD"
    vrf_forwarding: "PROD"
    ospf_area: "0"
    ospf_cost: "1"
  }
  
  # DEVELOPMENT VRF SVI  
  vlan200: {
    vlan_id: "200"
    ip_address: "10.200.1.1"
    subnet_mask: "255.255.255.0"
    status: "up"
    description: "Development Network"
    vrf: "DEV"
    vrf_forwarding: "DEV"
    ospf_area: "0"
    ospf_cost: "1"
  }
  
  # ROUTED INTERFACE WITH VRF
  Ethernet1/1: {
    description: "WAN Link - Production VRF"
    status: "up"
    bandwidth: "10Gbps"
    ip_address: "192.168.1.1"
    subnet_mask: "255.255.255.252"
    vrf: "PROD"
    vrf_forwarding: "PROD"
    ospf_area: "0"
    ospf_cost: "10"
  }
}

# VRF DATABASE EXAMPLE:
vrf_example: {
  nexus_switch_vrfs: {
    PROD: {
      rd: "65001:100"
      description: "Production VRF"
      import_rt: "65001:100,65001:999"
      export_rt: "65001:100"
      interfaces: "vlan100,Ethernet1/1"
      ospf_process_id: "100"
      bgp_enabled: "true"
      bgp_as: "65001"
      route_count: "156"
      route_leaking: "enabled"
      import_maps: "PROD-IMPORT"
      export_maps: "PROD-EXPORT"
    }
    DEV: {
      rd: "65001:200"
      description: "Development VRF"
      interfaces: "vlan200"
      ospf_process_id: "200"
      bgp_enabled: "false"
      route_count: "23"
      route_leaking: "disabled"
    }
  }
}